/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uidesign;

import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DeeptoTV
 */
public class PointOfSaleForm_2 extends javax.swing.JFrame {

    Connection conn = null;
    Statement statement1 = null;
    ResultSet rs = null;
    String userType = "";
    String selectedProduct = "";
    HashMap dataSet = new HashMap();
    double gross_total = 0;
    ArrayList selectedRowList = new ArrayList();
    int reciptNo = 0;
    StockManager stockManage = new StockManager();
    String u_type = "";

    /**
     * Creates new form PointOfSaleForm_2
     */
    public PointOfSaleForm_2() {
        initComponents();
    }

    public PointOfSaleForm_2(String type) {
        u_type = type;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel13 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        minimize_label = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jTextField_sell_search_stock = new javax.swing.JTextField();
        jComboBox_filter = new javax.swing.JComboBox<>();
        jLabel41 = new javax.swing.JLabel();
        jComboBox_sell_search = new javax.swing.JComboBox<>();
        jTextField_sell_product_ID = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_sale = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_sell_gross_total = new javax.swing.JTextField();
        jTextField_sell_payment = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField_sell_change = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_sell_discount_tk = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton_sell_print = new javax.swing.JButton();
        jButton_sell_print1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jTextField13 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField_sell_edit_quantity = new javax.swing.JTextField();
        jTextField_sell_edit_discount = new javax.swing.JTextField();
        jTextField_sell_edit_vat = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTextField_sell_edit_date = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextField_sell_edit_pID = new javax.swing.JTextField();
        jTextField_sell_edit_reciptNo = new javax.swing.JTextField();
        jTextField_sell_edit_s_price = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_stock = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jTextField_cus_phone = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTextField_cus_name = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jTextField_cus_recipt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea_cus_address = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/user_emp.png"))); // NOI18N
        jPanel13.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 10, 30, 20));

        jLabel5.setBackground(new java.awt.Color(204, 0, 0));
        jLabel5.setFont(new java.awt.Font("Andalus", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Rabiul");
        jPanel13.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/cancel.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel13.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 10, -1, -1));

        minimize_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/minimize.png"))); // NOI18N
        minimize_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize_labelMouseClicked(evt);
            }
        });
        jPanel13.add(minimize_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 10, -1, -1));

        jLabel24.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/back.png"))); // NOI18N
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel13.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 20));

        jButton7.setBackground(new java.awt.Color(204, 0, 0));
        jButton7.setText("LogOut");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 10, -1, -1));

        jLabel8.setBackground(new java.awt.Color(204, 0, 0));
        jLabel8.setFont(new java.awt.Font("Andalus", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Company Name");
        jPanel13.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, 160, 20));

        jPanel14.setBackground(new java.awt.Color(0, 153, 153));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/filter.png"))); // NOI18N
        jPanel14.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 10, -1, -1));

        jTextField_sell_search_stock.setBorder(null);
        jTextField_sell_search_stock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_search_stockKeyReleased(evt);
            }
        });
        jPanel14.add(jTextField_sell_search_stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 150, 20));

        jComboBox_filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category" }));
        jComboBox_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_filterActionPerformed(evt);
            }
        });
        jPanel14.add(jComboBox_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 10, 110, -1));

        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/search.png"))); // NOI18N
        jPanel14.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, -1));

        jComboBox_sell_search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Article" }));
        jPanel14.add(jComboBox_sell_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, 110, -1));

        jTextField_sell_product_ID.setBorder(null);
        jTextField_sell_product_ID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_sell_product_IDMouseClicked(evt);
            }
        });
        jTextField_sell_product_ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_product_IDKeyReleased(evt);
            }
        });
        jPanel14.add(jTextField_sell_product_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, 150, 20));

        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/search.png"))); // NOI18N
        jPanel14.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel6.setBackground(new java.awt.Color(204, 0, 0));
        jLabel6.setFont(new java.awt.Font("Andalus", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Search Product ID");
        jPanel14.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 150, 20));

        jLabel7.setBackground(new java.awt.Color(204, 0, 0));
        jLabel7.setFont(new java.awt.Font("Andalus", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Product List View");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel14.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 160, 20));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Your Products", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_sale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Recipt #", "Product ID", "Article", "Desc", "Unit Price", "Quantity", "Discount ", "VAT%", "Total", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_sale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_saleMouseClicked(evt);
            }
        });
        jTable_sale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable_saleKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_sale);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 870, 310));

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(0, 102, 102));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(204, 0, 0));
        jLabel2.setFont(new java.awt.Font("Andalus", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 30));

        jTextField_sell_gross_total.setText("0");
        jPanel7.add(jTextField_sell_gross_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 170, 30));

        jTextField_sell_payment.setText("0");
        jTextField_sell_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_paymentKeyReleased(evt);
            }
        });
        jPanel7.add(jTextField_sell_payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 170, 30));

        jLabel17.setBackground(new java.awt.Color(204, 0, 0));
        jLabel17.setFont(new java.awt.Font("Andalus", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Payment");
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 30));

        jTextField_sell_change.setEditable(false);
        jTextField_sell_change.setText("0");
        jPanel7.add(jTextField_sell_change, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 170, 30));

        jLabel18.setBackground(new java.awt.Color(204, 0, 0));
        jLabel18.setFont(new java.awt.Font("Andalus", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Change/Due");
        jPanel7.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 110, 30));

        jLabel19.setBackground(new java.awt.Color(204, 0, 0));
        jLabel19.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("TK");
        jPanel7.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 40, 20));

        jTextField_sell_discount_tk.setText("0");
        jTextField_sell_discount_tk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_discount_tkKeyReleased(evt);
            }
        });
        jPanel7.add(jTextField_sell_discount_tk, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 120, 30));

        jLabel33.setBackground(new java.awt.Color(204, 0, 0));
        jLabel33.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Discount");
        jPanel7.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 100, 20));

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 320, 190));

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_sell_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/save.png"))); // NOI18N
        jButton_sell_print.setText("jButton3");
        jButton_sell_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sell_printActionPerformed(evt);
            }
        });
        jPanel8.add(jButton_sell_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 100, 80));

        jButton_sell_print1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uidesign/images/printer.jpg"))); // NOI18N
        jButton_sell_print1.setText("jButton3");
        jButton_sell_print1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sell_print1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton_sell_print1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 70));

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 140, 190));

        jPanel9.setBackground(new java.awt.Color(0, 102, 102));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel9.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 80, -1));

        jLabel20.setBackground(new java.awt.Color(204, 0, 0));
        jLabel20.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Cancel Transaction");
        jPanel9.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 20));

        jButton5.setText("Cancel Transaction");
        jPanel9.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 143, 160, 40));

        jLabel34.setBackground(new java.awt.Color(204, 0, 0));
        jLabel34.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Recipt No");
        jPanel9.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        jPanel10.setBackground(new java.awt.Color(0, 102, 102));
        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setBackground(new java.awt.Color(204, 0, 0));
        jLabel25.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("%");
        jPanel10.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, 20));

        jLabel26.setBackground(new java.awt.Color(204, 0, 0));
        jLabel26.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Discount");
        jPanel10.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, 20));

        jTextField_sell_edit_quantity.setText("0");
        jTextField_sell_edit_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_sell_edit_quantityActionPerformed(evt);
            }
        });
        jTextField_sell_edit_quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_quantityKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_quantityKeyReleased(evt);
            }
        });
        jPanel10.add(jTextField_sell_edit_quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 100, -1));

        jTextField_sell_edit_discount.setEditable(false);
        jTextField_sell_edit_discount.setText("0");
        jPanel10.add(jTextField_sell_edit_discount, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 60, 20));

        jTextField_sell_edit_vat.setEditable(false);
        jTextField_sell_edit_vat.setText("0");
        jPanel10.add(jTextField_sell_edit_vat, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 60, -1));

        jLabel27.setBackground(new java.awt.Color(204, 0, 0));
        jLabel27.setFont(new java.awt.Font("Andalus", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Sell Edit");
        jPanel10.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, 20));

        jLabel28.setBackground(new java.awt.Color(204, 0, 0));
        jLabel28.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Quantity");
        jPanel10.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 20));

        jLabel29.setBackground(new java.awt.Color(204, 0, 0));
        jLabel29.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("VAT");
        jPanel10.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, 20));

        jLabel30.setBackground(new java.awt.Color(204, 0, 0));
        jLabel30.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("%");
        jPanel10.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, 20));

        jTextField_sell_edit_date.setEditable(false);
        jTextField_sell_edit_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_dateKeyReleased(evt);
            }
        });
        jPanel10.add(jTextField_sell_edit_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 150, -1));

        jLabel31.setBackground(new java.awt.Color(204, 0, 0));
        jLabel31.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Product Id");
        jPanel10.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 20));

        jTextField_sell_edit_pID.setEditable(false);
        jTextField_sell_edit_pID.setText("0");
        jTextField_sell_edit_pID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_pIDKeyReleased(evt);
            }
        });
        jPanel10.add(jTextField_sell_edit_pID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 100, -1));

        jTextField_sell_edit_reciptNo.setEditable(false);
        jTextField_sell_edit_reciptNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_reciptNoKeyReleased(evt);
            }
        });
        jPanel10.add(jTextField_sell_edit_reciptNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 60, -1));

        jTextField_sell_edit_s_price.setText("0");
        jTextField_sell_edit_s_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_sell_edit_s_priceActionPerformed(evt);
            }
        });
        jTextField_sell_edit_s_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_s_priceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_sell_edit_s_priceKeyReleased(evt);
            }
        });
        jPanel10.add(jTextField_sell_edit_s_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 100, -1));

        jLabel32.setBackground(new java.awt.Color(204, 0, 0));
        jLabel32.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Selling Price");
        jPanel10.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Products Available", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Stock", "Selling Price"
            }
        ));
        jTable_stock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_stockMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_stock);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 360, 320));

        jPanel11.setBackground(new java.awt.Color(0, 102, 102));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField_cus_phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_cus_phoneActionPerformed(evt);
            }
        });
        jTextField_cus_phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_cus_phoneKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_cus_phoneKeyReleased(evt);
            }
        });
        jPanel11.add(jTextField_cus_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 140, -1));

        jLabel35.setBackground(new java.awt.Color(204, 0, 0));
        jLabel35.setFont(new java.awt.Font("Andalus", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Due Customer Details");
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, 20));

        jLabel36.setBackground(new java.awt.Color(204, 0, 0));
        jLabel36.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Phone No");
        jPanel11.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, 20));

        jLabel39.setBackground(new java.awt.Color(204, 0, 0));
        jLabel39.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Customer Name");
        jPanel11.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, 20));

        jTextField_cus_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_cus_nameKeyReleased(evt);
            }
        });
        jPanel11.add(jTextField_cus_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 140, -1));

        jLabel43.setBackground(new java.awt.Color(204, 0, 0));
        jLabel43.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Address");
        jPanel11.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 20));

        jLabel44.setBackground(new java.awt.Color(204, 0, 0));
        jLabel44.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Recipt No");
        jPanel11.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 20));
        jPanel11.add(jTextField_cus_recipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 80, -1));

        jTextArea_cus_address.setColumns(20);
        jTextArea_cus_address.setRows(5);
        jScrollPane3.setViewportView(jTextArea_cus_address);

        jPanel11.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 150, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        //System.exit(0);
        dispose();
        LoginForm lf = new LoginForm();
        lf.setLocation(100, 50);
        lf.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void minimize_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_labelMouseClicked
        // TODO add your handling code here:
        this.setState(this.ICONIFIED);

    }//GEN-LAST:event_minimize_labelMouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        // TODO add your handling code here:
        dispose();
        //LoginForm lf = new LoginForm();
        if (u_type.equals("Admin")) {
            HomeForm lf = new HomeForm(u_type);
            lf.pack();
            lf.setLocationRelativeTo(null);
            lf.setVisible(true);
        } else {
            LoginForm lf = new LoginForm();
            lf.setLocation(100, 50);
            lf.setVisible(true);
        }

    }//GEN-LAST:event_jLabel24MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dispose();
        LoginForm lf = new LoginForm();
        lf.setLocation(100, 50);
        lf.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    public void salesPopulate(int rn) {
        String rnNo = "", p_id = "", p_name = "", desc = "", s_price = "", quantity = "", discount = "", vat = "", total = "", date = "", t_type = "";
        Vector columnNames = new Vector();
        Vector data = new Vector();
        int columns = 0;
        String sql = "select * from sell where recipt_no = '" + rn + "'";
        conn = DBConnection.connectDb();
        if (conn != null) {
            try {
                statement1 = conn.createStatement();
                rs = statement1.executeQuery(sql);
                //this.jTable1.setModel(DbUtils.resultSetToTableModel(rs_razuna));

                columnNames.addElement("Recipt #");
                columnNames.addElement("Product ID");
                columnNames.addElement("article");
                columnNames.addElement("Desc");
                columnNames.addElement("Unit Price");
                columnNames.addElement("Quantity");
                columnNames.addElement("Discount%");
                columnNames.addElement("VAT%");
                columnNames.addElement("Total");
                columnNames.addElement("Date");
                // columnNames.addElement("Trans. Type");

                while (rs.next()) {
                    Vector row = new Vector(columns);
                    rnNo = rs.getString("recipt_no");
                    p_id = rs.getString("product_id");
                    p_name = rs.getString("article");
                    desc = rs.getString("description");
                    s_price = rs.getString("price");
                    quantity = rs.getString("quantity");
                    discount = rs.getString("discount");
                    vat = rs.getString("vat");
                    total = rs.getString("total");
                    date = rs.getString("date");
                    //t_type = rs.getString("quantity");

                    row.addElement(rnNo);
                    row.addElement(p_id);
                    row.addElement(p_name);
                    row.addElement(desc);
                    row.addElement(s_price);
                    row.addElement(quantity);
                    row.addElement(discount);
                    row.addElement(vat);
                    row.addElement(total);
                    row.addElement(date);
                    //row.addElement(t_type);
                    data.addElement(row);
                }
                DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
                jTable_sale.setModel(tableModel);
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    rs.close();
                    statement1.close();
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PointOfSaleForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
        }
    }
    private void jTable_stockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_stockMouseClicked

        jTextField_cus_recipt.setText(String.valueOf(reciptNo));
        selectedProduct = jTable_stock.getValueAt(jTable_stock.getSelectedRow(), 0).toString();
        if (selectedRowList.contains(selectedProduct)) {
            JOptionPane.showMessageDialog(null, "You have allready add this product.");
            return;
        } else {
            selectedRowList.add(selectedProduct);
        }

        sellProduct(selectedProduct);
    }//GEN-LAST:event_jTable_stockMouseClicked

    public void totalGrossCalculation(int rn) throws SQLException {
        conn = DBConnection.connectDb();
        if (conn != null) {
            try {
                double total = 0;
                String sql = "SELECT sum(total) FROM `sell` WHERE recipt_no='" + rn + "'";
                statement1 = conn.createStatement();
                rs = statement1.executeQuery(sql);
                while (rs.next()) {
                    total = rs.getDouble(1);
                }
                jTextField_sell_gross_total.setText(String.valueOf(total));
            } catch (Exception e) {

            } finally {
                rs.close();
                statement1.close();
                conn.close();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
        }
    }

    public void stockUpdate(String msg, String quantity, String p_id) {
        conn = DBConnection.connectDb();
        if (conn != null) {
            String msgSplit[], flg = "", qnty = "";
            msgSplit = msg.split("/");
            flg = msgSplit[0];
            qnty = msgSplit[1];
            if (flg.equals("yes")) {
                double totalQnty = Double.parseDouble(qnty) - Double.parseDouble(quantity);
                String update_stock = "update stock set quantity='" + totalQnty + "' where product_id = '" + p_id + "'";

                try {
                    statement1 = conn.createStatement();
                    statement1.executeUpdate(update_stock);
                } catch (SQLException ex) {
                    Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        statement1.close();
                        conn.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
        }
    }

    public void reciptNoGenerate() {
        SalesManager saleManager = new SalesManager();

        try {
            reciptNo = saleManager.reciptNo();
            reciptNo = reciptNo + 1;
            //jTextField_reciptNo.setText(String.valueOf(reciptNo + 1));
        } catch (SQLException ex) {
            Logger.getLogger(PointOfSaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //set Cursor
        jTextField_sell_product_ID.requestFocusInWindow();
        //date
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Calendar calobj = Calendar.getInstance();
        //jTextField_sell_date.setText(df.format(calobj.getTime()));

        //reciptNo generate
        reciptNoGenerate();
        //stock populate
        stockPopulate(0, "0");

        //add category
        conn = DBConnection.connectDb();
        if (conn != null) {
            try {

                int c_db = setItem(0);
                statement1 = conn.createStatement();
                String sql = "Select c_name from categories";
                rs = statement1.executeQuery(sql);
                if (c_db != jComboBox_filter.getItemCount()) {
                    while (rs.next()) {
                        jComboBox_filter.addItem(rs.getString("c_name"));
                    }
                }

                rs.close();
                statement1.close();

            } catch (SQLException ex) {
                Logger.getLogger(InventoryForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed");
        }
    }//GEN-LAST:event_formWindowOpened

    public int setItem(int action) throws SQLException {
        int c_db = 0;
        if (action == 0) {
            //count category and unit

            statement1 = conn.createStatement();
            String sql_c = "Select count(c_id) from categories";
            rs = statement1.executeQuery(sql_c);
            while (rs.next()) {
                c_db = rs.getInt(1);
            }
            rs.close();
            statement1.close();

        }
        return c_db;
    }

    public void sellProduct(String selected_product) {
        String p_id = "", article = "", decription = "", s_price = "", quantity = "", discount = "", vat = "", unit = "", b_price = "";
        //int reciptNo = 0;
        conn = DBConnection.connectDb();
        if (conn != null) {
            String query = "select * from stock where product_id = '" + selected_product + "'";
            try {
                statement1 = conn.createStatement();
                rs = statement1.executeQuery(query);
                while (rs.next()) {
                    p_id = rs.getString("product_id");
                    article = rs.getString("article");
                    decription = rs.getString("description");
                    s_price = rs.getString("selling_price");
                    quantity = rs.getString("quantity");
                    discount = rs.getString("discount");
                    vat = rs.getString("vat");
                    unit = rs.getString("unit");
                    b_price = rs.getString("buying_price");
                }

                //total calculation
                quantity = "1";
                double total = ((Double.parseDouble(s_price) * Double.parseDouble(quantity)) + (Double.parseDouble(vat) / 100)) - (Double.parseDouble(discount) / 100);
                //insert into sell
                String action = "sell";
                String user = SqlManager.getUserName();
                String user_type = u_type;

                String insertSql = "INSERT INTO sell (recipt_no,product_id,article,description,price,quantity,discount,vat,total,date,action,user,user_type) values (?,?,?,?,?,?,?,?,?,NOW(),?,?,?)";
                PreparedStatement preparedStmt = conn.prepareStatement(insertSql);

                preparedStmt.setInt(1, reciptNo);
                preparedStmt.setString(2, p_id);
                preparedStmt.setString(3, article);
                preparedStmt.setString(4, decription);
                preparedStmt.setString(5, s_price);
                preparedStmt.setString(6, quantity);
                preparedStmt.setString(7, discount);
                preparedStmt.setString(8, vat);
                preparedStmt.setString(9, String.valueOf(total));
                preparedStmt.setString(10, action);
                preparedStmt.setString(11, user);
                preparedStmt.setString(12, user_type);

                preparedStmt.execute();

            } catch (SQLException ex) {
                Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
            } finally {

            }
            salesPopulate(reciptNo);
            String msg = stockManage.stockDetails(p_id, article, b_price);
            stockUpdate(msg, quantity, p_id);
            stockPopulate(0, "0");
            try {
                totalGrossCalculation(reciptNo);
            } catch (SQLException ex) {
                Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
        }
    }
    private void jTextField_sell_product_IDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_sell_product_IDMouseClicked
        //jTextField_sell_product_ID.setText("");
    }//GEN-LAST:event_jTextField_sell_product_IDMouseClicked

    private void jTextField_sell_product_IDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_product_IDKeyReleased
        jTextField_cus_recipt.setText(String.valueOf(reciptNo));
        String p_id = jTextField_sell_product_ID.getText();
        if (selectedRowList.contains(p_id)) {
            JOptionPane.showMessageDialog(null, "You have allready add this product.");
            return;
        } else {
            //selectedRowList.add(p_id);
        }

        int total = 0;
        boolean isFound = false;
        conn = DBConnection.connectDb();
        if (conn != null) {
            try {
                statement1 = conn.createStatement();
                String sql = "select count(id) from stock where product_id = '" + p_id + "' and quantity > 0";
                rs = statement1.executeQuery(sql);
                while (rs.next()) {
                    total = rs.getInt(1);
                }
                if (total == 0) {
                    isFound = false;
                } else {
                    isFound = true;
                }
            } catch (Exception e) {

            } finally {
                try {
                    rs.close();
                    statement1.close();
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if (isFound == true) {
                sellProduct(p_id);
                selectedRowList.add(p_id);
            } else {
                JOptionPane.showMessageDialog(null, "There is no product in stock");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
        }
    }//GEN-LAST:event_jTextField_sell_product_IDKeyReleased

    private void jTextField_sell_search_stockKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_search_stockKeyReleased
        String filter = jComboBox_sell_search.getSelectedItem().toString();

        stockPopulate(1, filter);

    }//GEN-LAST:event_jTextField_sell_search_stockKeyReleased

    private void jComboBox_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_filterActionPerformed

        stockPopulate(2, "0");
    }//GEN-LAST:event_jComboBox_filterActionPerformed

    private void jTable_saleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable_saleKeyPressed
        if (evt.getKeyChar() == 'd') {
            if (evt.isAltDown()) {
                String selectedDate = jTable_sale.getValueAt(jTable_sale.getSelectedRow(), 9).toString();
                String p_id = jTable_sale.getValueAt(jTable_sale.getSelectedRow(), 1).toString();
                String rn = jTable_sale.getValueAt(jTable_sale.getSelectedRow(), 0).toString();
                String qunatity_sell = "", qunatity_stock = "";
                conn = DBConnection.connectDb();
                if (conn != null) {
                    try {
                        String query = "select * from sell where date = '" + selectedDate + "'";
                        statement1 = conn.createStatement();
                        rs = statement1.executeQuery(query);
                        while (rs.next()) {
                            qunatity_sell = rs.getString("quantity");
                        }
                        rs.close();
                        statement1.close();
                        String query_s = "select * from stock where product_id = '" + p_id + "'";
                        statement1 = conn.createStatement();
                        rs = statement1.executeQuery(query_s);
                        while (rs.next()) {
                            qunatity_stock = rs.getString("quantity");
                        }
                        rs.close();
                        statement1.close();

                        double total_quantity = Double.parseDouble(qunatity_stock) + Double.parseDouble(qunatity_sell);
                        statement1 = conn.createStatement();
                        String update_query = "update stock set quantity = '" + total_quantity + "' where product_id = '" + p_id + "'";
                        String delete_query = "delete from sell where date = '" + selectedDate + "'";
                        int dialogButton = JOptionPane.YES_NO_OPTION;
                        int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Delete this product?", "Warning", dialogButton);
                        if (dialogResult == JOptionPane.YES_OPTION) {
                            statement1.executeUpdate(update_query);
                            statement1.executeUpdate(delete_query);
                            selectedRowList.remove(p_id);
                            stockPopulate(0, "0");
                            salesPopulate(Integer.parseInt(rn));
                            totalGrossCalculation(Integer.parseInt(rn));
                            jTextField_sell_edit_pID.setText("");
                            jTextField_sell_edit_reciptNo.setText("");
                            jTextField_sell_edit_s_price.setText("0");
                            jTextField_sell_edit_date.setText("");
                            jTextField_sell_edit_discount.setText("0");
                            jTextField_sell_edit_vat.setText("0");
                            jTextField_sell_edit_quantity.setText("0");
                            JOptionPane.showMessageDialog(null, "Product Deleted!!!");
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    } finally {
                        try {
                            statement1.close();
                            conn.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
                }
            }
        }
    }//GEN-LAST:event_jTable_saleKeyPressed

    private void jTable_saleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_saleMouseClicked
        String selectedDate = jTable_sale.getValueAt(jTable_sale.getSelectedRow(), 9).toString();
        int id = 0;
        String discount = "", vat = "", quantity = "", p_id = "", recipt_no = "", date = "", s_price = "";
        conn = DBConnection.connectDb();
        if (conn != null) {
            try {
                String sql = "Select * from sell where date = '" + selectedDate + "'";
                statement1 = conn.createStatement();
                rs = statement1.executeQuery(sql);
                while (rs.next()) {
                    id = rs.getInt("id");
                    p_id = rs.getString("product_id");
                    discount = rs.getString("discount");
                    vat = rs.getString("vat");
                    quantity = rs.getString("quantity");
                    recipt_no = rs.getString("recipt_no");
                    date = rs.getString("date");
                    s_price = rs.getString("price");
                }
                jTextField_sell_edit_pID.setText(p_id);
                jTextField_sell_edit_reciptNo.setText(recipt_no);
                jTextField_sell_edit_s_price.setText(s_price);
                jTextField_sell_edit_date.setText(date);
                jTextField_sell_edit_discount.setText(discount);
                jTextField_sell_edit_vat.setText(vat);
                jTextField_sell_edit_quantity.setText(quantity);
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    rs.close();
                    statement1.close();
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Database connection Failed!!!");
        }
    }//GEN-LAST:event_jTable_saleMouseClicked

    private void jTextField_sell_edit_quantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_quantityKeyReleased

    }//GEN-LAST:event_jTextField_sell_edit_quantityKeyReleased

    private void jTextField_sell_edit_dateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_dateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sell_edit_dateKeyReleased

    private void jTextField_sell_edit_pIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_pIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sell_edit_pIDKeyReleased

    private void jTextField_sell_edit_reciptNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_reciptNoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sell_edit_reciptNoKeyReleased

    private void jTextField_sell_edit_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_quantityActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField_sell_edit_quantityActionPerformed

    private void jTextField_sell_edit_quantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_quantityKeyPressed
        String p_id = jTextField_sell_edit_pID.getText();
        String date = jTextField_sell_edit_date.getText();
        String rn = jTextField_sell_edit_reciptNo.getText();
        String qnty = jTextField_sell_edit_quantity.getText();
        String disc = jTextField_sell_edit_discount.getText();
        String vat = jTextField_sell_edit_vat.getText();
        String s_price = jTextField_sell_edit_s_price.getText();
        String qunatity_stock = "", qunatity_sell = "";
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            conn = DBConnection.connectDb();
            if (conn != null) {

                try {
                    //stock 
                    String query_s = "select * from stock where product_id = '" + p_id + "'";
                    statement1 = conn.createStatement();
                    rs = statement1.executeQuery(query_s);
                    while (rs.next()) {
                        qunatity_stock = rs.getString("quantity");
                    }
                    rs.close();
                    statement1.close();
                    //sell
                    String query_sell = "select * from sell where product_id = '" + p_id + "' and recipt_no = '" + rn + "'";
                    statement1 = conn.createStatement();
                    rs = statement1.executeQuery(query_sell);
                    while (rs.next()) {
                        qunatity_sell = rs.getString("quantity");
                    }
                    rs.close();
                    statement1.close();
                    double total_qnty = (Double.parseDouble(qunatity_stock) + Double.parseDouble(qunatity_sell)) - Double.parseDouble(qnty);
                    String stockUpdate = "update stock set quantity='" + total_qnty + "' where product_id = '" + p_id + "'";
                    double total = ((Double.parseDouble(s_price) * Double.parseDouble(qnty)) + (Double.parseDouble(vat) / 100)) - (Double.parseDouble(disc) / 100);
                    String sellUpdate = "update sell set quantity='" + qnty + "',total ='" + total + "' where date='" + date + "'";

                    statement1 = conn.createStatement();
                    statement1.executeUpdate(sellUpdate);
                    statement1.executeUpdate(stockUpdate);
                    statement1.close();

                    salesPopulate(reciptNo);
                    stockPopulate(0, "0");
                    try {
                        totalGrossCalculation(reciptNo);
                    } catch (SQLException ex) {
                        Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    jTextField_sell_edit_pID.setText("");
                    jTextField_sell_edit_reciptNo.setText("");
                    jTextField_sell_edit_s_price.setText("0");
                    jTextField_sell_edit_date.setText("");
                    jTextField_sell_edit_discount.setText("0");
                    jTextField_sell_edit_vat.setText("0");
                    jTextField_sell_edit_quantity.setText("0");

                } catch (SQLException ex) {
                    Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
            }
        }
    }//GEN-LAST:event_jTextField_sell_edit_quantityKeyPressed

    private void jTextField_sell_edit_s_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_s_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sell_edit_s_priceActionPerformed

    private void jTextField_sell_edit_s_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_s_priceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sell_edit_s_priceKeyPressed

    private void jTextField_sell_edit_s_priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_edit_s_priceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sell_edit_s_priceKeyReleased

    public void sellComplete() {
        salesPopulate(reciptNo + 1);
        try {
            addCustomer();
        } catch (SQLException ex) {
            Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
        }
        reciptNoGenerate();
        selectedRowList.clear();
        jTextField_cus_recipt.setText("0");
        jTextField_sell_change.setText("0");
        jTextField_sell_discount_tk.setText("0");
        jTextField_sell_gross_total.setText("0");
        jTextField_sell_payment.setText("0");
        jTextArea_cus_address.setText("");
        jTextField_cus_name.setText("");
        jTextField_cus_phone.setText("");
        MessageFormat header = new MessageFormat("Report");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            jTable_sale.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (PrinterException ex) {
            Logger.getLogger(PointOfSaleForm_2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton_sell_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sell_printActionPerformed

        double change = Double.parseDouble(jTextField_sell_change.getText());
        double paid = Double.parseDouble(jTextField_sell_payment.getText());
        if (change > 0 || paid == 0) {
            if (jTextArea_cus_address.getText().equals("") || jTextField_cus_name.getText().equals("") || jTextField_cus_phone.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Please Fill up Customer Details");
                return;
            } else {
                sellComplete();
            }
        } else {
            sellComplete();
        }
    }//GEN-LAST:event_jButton_sell_printActionPerformed

    public void addCustomer() throws SQLException {
        String reciptNo = jTextField_cus_recipt.getText();
        String cus_name = jTextField_cus_name.getText();
        String cus_phone = jTextField_cus_phone.getText();
        String cus_address = jTextArea_cus_address.getText();
        String total = jTextField_sell_gross_total.getText();
        String paid = jTextField_sell_payment.getText();
        String change = jTextField_sell_change.getText();
        String discount = jTextField_sell_discount_tk.getText();

        conn = DBConnection.connectDb();
        if (conn != null) {
            try {
                String insertSql = "INSERT INTO customer_details (recipt_no,cus_name,cus_phone,address,total,payment,discount,change_due,date) values (?,?,?,?,?,?,?,?,NOW())";
                PreparedStatement preparedStmt = conn.prepareStatement(insertSql);

                preparedStmt.setString(1, reciptNo);
                preparedStmt.setString(2, cus_name);
                preparedStmt.setString(3, cus_phone);
                preparedStmt.setString(4, cus_address);
                preparedStmt.setString(5, total);
                preparedStmt.setString(6, paid);
                preparedStmt.setString(7, discount);
                preparedStmt.setString(8, change);

                preparedStmt.execute();

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                conn.close();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed");
        }
    }
    private void jTextField_cus_phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_cus_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_cus_phoneActionPerformed

    private void jTextField_cus_phoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_cus_phoneKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_cus_phoneKeyPressed

    private void jTextField_cus_phoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_cus_phoneKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_cus_phoneKeyReleased

    private void jTextField_cus_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_cus_nameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_cus_nameKeyReleased

    private void jTextField_sell_paymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_paymentKeyReleased
        try {
            double total = Double.parseDouble(jTextField_sell_gross_total.getText());
            double pay = Double.parseDouble(jTextField_sell_payment.getText());
            jTextField_sell_change.setText(String.valueOf(total - pay));
        } catch (Exception e) {
            jTextField_sell_payment.setText("");
        }

    }//GEN-LAST:event_jTextField_sell_paymentKeyReleased

    private void jButton_sell_print1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sell_print1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_sell_print1ActionPerformed

    private void jTextField_sell_discount_tkKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sell_discount_tkKeyReleased
        // TODO add your handling code here:
        try {
            double dis = Double.parseDouble(jTextField_sell_discount_tk.getText());
            double total = Double.parseDouble(jTextField_sell_gross_total.getText());
            double paid = Double.parseDouble(jTextField_sell_payment.getText());
            jTextField_sell_change.setText(String.valueOf(total - (paid + dis)));
        } catch (Exception e) {
            jTextField_sell_discount_tk.setText("");
        }

    }//GEN-LAST:event_jTextField_sell_discount_tkKeyReleased

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        ProductListForm sdf = new ProductListForm();
        
        sdf.setDefaultCloseOperation(sdf.DISPOSE_ON_CLOSE);
        sdf.setLocation(200, 100);
       
        sdf.setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked
    public void stockPopulate(int flag, String filt) {
        String p_id = "", p_name = "", stock = "", s_price = "";
        Vector columnNames = new Vector();
        Vector data = new Vector();
        int columns = 0;
        String sql = "";
        String text = jTextField_sell_search_stock.getText();
        if (flag == 0 && filt.equals("0")) {
            sql = "select * from stock where quantity > 0";
        } else if (flag == 1 && filt.equals("ID")) {
            sql = "select * from stock where product_id like '%" + text + "%' and quantity > 0";
        } else if (flag == 1 && filt.equals("Article")) {
            sql = "select * from stock where article like '%" + text + "%' and quantity > 0";
        } else if (flag == 2 && filt.equals("0")) {
            String filter = jComboBox_filter.getSelectedItem().toString();
            if (filter.equals("Category")) {
                sql = "select * from stock where quantity > 0";

            } else {
                sql = "select * from stock where category = '" + filter + "' and quantity > 0";
            }
        }
        conn = DBConnection.connectDb();
        if (conn != null) {
            try {
                statement1 = conn.createStatement();
                rs = statement1.executeQuery(sql);
                //this.jTable1.setModel(DbUtils.resultSetToTableModel(rs_razuna));

                columnNames.addElement("Product ID");
                columnNames.addElement("Product Name");
                columnNames.addElement("Stock");
                columnNames.addElement("Selling Price");

                while (rs.next()) {
                    Vector row = new Vector(columns);
                    p_id = rs.getString("product_id");
                    p_name = rs.getString("article");
                    stock = rs.getString("quantity");
                    s_price = rs.getString("selling_price");
                    row.addElement(p_id);
                    row.addElement(p_name);
                    row.addElement(stock);
                    row.addElement(s_price);
                    data.addElement(row);
                }
                DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
                jTable_stock.setModel(tableModel);
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    rs.close();
                    statement1.close();
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PointOfSaleForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database Connection Failed!!!");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PointOfSaleForm_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PointOfSaleForm_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PointOfSaleForm_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PointOfSaleForm_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PointOfSaleForm_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton_sell_print;
    private javax.swing.JButton jButton_sell_print1;
    private javax.swing.JComboBox<String> jComboBox_filter;
    private javax.swing.JComboBox<String> jComboBox_sell_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_sale;
    private javax.swing.JTable jTable_stock;
    private javax.swing.JTextArea jTextArea_cus_address;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField_cus_name;
    private javax.swing.JTextField jTextField_cus_phone;
    private javax.swing.JTextField jTextField_cus_recipt;
    private javax.swing.JTextField jTextField_sell_change;
    private javax.swing.JTextField jTextField_sell_discount_tk;
    private javax.swing.JTextField jTextField_sell_edit_date;
    private javax.swing.JTextField jTextField_sell_edit_discount;
    private javax.swing.JTextField jTextField_sell_edit_pID;
    private javax.swing.JTextField jTextField_sell_edit_quantity;
    private javax.swing.JTextField jTextField_sell_edit_reciptNo;
    private javax.swing.JTextField jTextField_sell_edit_s_price;
    private javax.swing.JTextField jTextField_sell_edit_vat;
    private javax.swing.JTextField jTextField_sell_gross_total;
    private javax.swing.JTextField jTextField_sell_payment;
    private javax.swing.JTextField jTextField_sell_product_ID;
    private javax.swing.JTextField jTextField_sell_search_stock;
    private javax.swing.JLabel minimize_label;
    // End of variables declaration//GEN-END:variables
}
